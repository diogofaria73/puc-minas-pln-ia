# Script PowerShell para facilitar a execu√ß√£o da aplica√ß√£o Streamlit com Pipenv

# Fun√ß√£o para exibir mensagens coloridas
function Write-ColorOutput {
    param (
        [Parameter(Mandatory=$true)]
        [string]$Message,
        
        [Parameter(Mandatory=$true)]
        [string]$Color
    )
    
    $prevColor = $host.UI.RawUI.ForegroundColor
    $host.UI.RawUI.ForegroundColor = $Color
    Write-Output $Message
    $host.UI.RawUI.ForegroundColor = $prevColor
}

# Verificar se Pipenv est√° instalado
try {
    $null = Get-Command pipenv -ErrorAction Stop
} catch {
    Write-ColorOutput "‚ùå Pipenv n√£o est√° instalado. Instalando..." "Red"
    pip install pipenv
}

# Menu simples
Clear-Host
Write-ColorOutput "üß† An√°lise de Sentimento - PUC Minas" "Blue"
Write-ColorOutput "===============================" "Blue"
Write-Output ""
Write-ColorOutput "Escolha uma op√ß√£o:" "Yellow"
Write-Output "1. Instalar depend√™ncias"
Write-Output "2. Baixar recursos necess√°rios"
Write-Output "3. Baixar dados de exemplo"
Write-Output "4. Executar aplica√ß√£o"
Write-Output "5. Formatar c√≥digo (dev)"
Write-Output "6. Verificar estilo (lint, dev)"
Write-Output "7. Limpar arquivos tempor√°rios"
Write-Output "8. Sair"
Write-Output ""
$option = Read-Host "Op√ß√£o"

switch ($option) {
    "1" {
        Write-ColorOutput "‚è≥ Instalando depend√™ncias..." "Yellow"
        pipenv install
        Write-ColorOutput "‚úÖ Depend√™ncias instaladas com sucesso!" "Green"
    }
    "2" {
        Write-ColorOutput "‚è≥ Baixando recursos necess√°rios..." "Yellow"
        pipenv run setup
        Write-ColorOutput "‚úÖ Recursos baixados com sucesso!" "Green"
    }
    "3" {
        Write-ColorOutput "‚è≥ Baixando dados de exemplo..." "Yellow"
        pipenv run download_example
        Write-ColorOutput "‚úÖ Dados de exemplo baixados com sucesso!" "Green"
    }
    "4" {
        Write-ColorOutput "‚è≥ Executando aplica√ß√£o..." "Yellow"
        # Iniciar a aplica√ß√£o em um novo processo
        $process = Start-Process -FilePath "pipenv" -ArgumentList "run app" -PassThru
        
        # Esperar um pouco para o servidor iniciar
        Start-Sleep -Seconds 3
        
        # Abrir o navegador
        Write-ColorOutput "üåê Abrindo navegador em http://localhost:8501" "Yellow"
        Start-Process "http://localhost:8501"
        
        # Aguardar o usu√°rio querer encerrar
        Write-Output "Pressione Enter para encerrar a aplica√ß√£o..."
        $null = Read-Host
        
        # Encerrar o processo
        if (-not $process.HasExited) {
            Stop-Process -Id $process.Id -Force
        }
    }
    "5" {
        Write-ColorOutput "‚è≥ Formatando c√≥digo com Black..." "Yellow"
        pipenv run format
        Write-ColorOutput "‚úÖ C√≥digo formatado com sucesso!" "Green"
    }
    "6" {
        Write-ColorOutput "‚è≥ Verificando estilo com Flake8..." "Yellow"
        pipenv run lint
        Write-ColorOutput "‚úÖ Verifica√ß√£o de estilo conclu√≠da!" "Green"
    }
    "7" {
        Write-ColorOutput "‚è≥ Limpando arquivos tempor√°rios..." "Yellow"
        pipenv run cleanup
        Write-ColorOutput "‚úÖ Limpeza conclu√≠da!" "Green"
    }
    "8" {
        Write-ColorOutput "üëã At√© mais!" "Blue"
        exit
    }
    default {
        Write-ColorOutput "‚ùå Op√ß√£o inv√°lida" "Red"
    }
} 