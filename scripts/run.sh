#!/bin/bash
# Script para facilitar a execu√ß√£o da aplica√ß√£o Streamlit com Pipenv

# Detectar o sistema operacional
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    OPEN_CMD="open"
elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" || "$OSTYPE" == "win32" ]]; then
    # Windows
    OPEN_CMD="start"
else
    # Linux e outros
    OPEN_CMD="xdg-open"
fi

# Fun√ß√£o para exibir mensagens coloridas
function echo_color() {
    local color=$1
    local message=$2
    
    if [ -t 1 ]; then  # Verifica se o stdout √© um terminal
        case $color in
            "green")  echo -e "\033[32m$message\033[0m" ;;
            "yellow") echo -e "\033[33m$message\033[0m" ;;
            "red")    echo -e "\033[31m$message\033[0m" ;;
            "blue")   echo -e "\033[34m$message\033[0m" ;;
            *)        echo "$message" ;;
        esac
    else
        echo "$message"
    fi
}

# Verificar se Pipenv est√° instalado
if ! command -v pipenv &> /dev/null; then
    echo_color "red" "‚ùå Pipenv n√£o est√° instalado. Instalando..."
    pip install pipenv
fi

# Menu simples
clear
echo_color "blue" "üß† An√°lise de Sentimento - PUC Minas"
echo_color "blue" "==============================="
echo ""
echo_color "yellow" "Escolha uma op√ß√£o:"
echo "1. Instalar depend√™ncias"
echo "2. Baixar recursos necess√°rios"
echo "3. Baixar dados de exemplo"
echo "4. Executar aplica√ß√£o"
echo "5. Formatar c√≥digo (dev)"
echo "6. Verificar estilo (lint, dev)"
echo "7. Limpar arquivos tempor√°rios"
echo "8. Sair"
echo ""
read -p "Op√ß√£o: " option

case $option in
    1)
        echo_color "yellow" "‚è≥ Instalando depend√™ncias..."
        pipenv install
        echo_color "green" "‚úÖ Depend√™ncias instaladas com sucesso!"
        ;;
    2)
        echo_color "yellow" "‚è≥ Baixando recursos necess√°rios..."
        pipenv run setup
        echo_color "green" "‚úÖ Recursos baixados com sucesso!"
        ;;
    3)
        echo_color "yellow" "‚è≥ Baixando dados de exemplo..."
        pipenv run download_example
        echo_color "green" "‚úÖ Dados de exemplo baixados com sucesso!"
        ;;
    4)
        echo_color "yellow" "‚è≥ Executando aplica√ß√£o..."
        # Iniciar a aplica√ß√£o em segundo plano
        pipenv run app &
        APP_PID=$!
        
        # Esperar um pouco para o servidor iniciar
        sleep 3
        
        # Abrir o navegador
        echo_color "yellow" "üåê Abrindo navegador em http://localhost:8501"
        $OPEN_CMD http://localhost:8501
        
        # Aguardar o processo da aplica√ß√£o terminar
        wait $APP_PID
        ;;
    5)
        echo_color "yellow" "‚è≥ Formatando c√≥digo com Black..."
        pipenv run format
        echo_color "green" "‚úÖ C√≥digo formatado com sucesso!"
        ;;
    6)
        echo_color "yellow" "‚è≥ Verificando estilo com Flake8..."
        pipenv run lint
        echo_color "green" "‚úÖ Verifica√ß√£o de estilo conclu√≠da!"
        ;;
    7)
        echo_color "yellow" "‚è≥ Limpando arquivos tempor√°rios..."
        pipenv run cleanup
        echo_color "green" "‚úÖ Limpeza conclu√≠da!"
        ;;
    8)
        echo_color "blue" "üëã At√© mais!"
        exit 0
        ;;
    *)
        echo_color "red" "‚ùå Op√ß√£o inv√°lida"
        ;;
esac 